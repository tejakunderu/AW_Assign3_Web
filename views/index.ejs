<!doctype html>
<html>
    <head>
        <title>Java Recommendation Service</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">

        <style>
            body {
                word-wrap: break-word;
            }

            .table tr {
                cursor: pointer;
            }
        </style>
        <script type='text/javascript' src='/jquery/jquery.min.js'></script>
    </head>
    <body>
        <div class="container" id="container">

            <div class="page-header text-center">
                <h1><span class="fa fa-compass"></span> Java Recommendation Service</h1>
                <h2><span class="fa fa-bars"></span> Posts Page</h2>
            </div>

            <h3 class="text-center"><i>Click on any of the following posts to get recommendations!</i></h3>

            <div class="well">
                <h4><strong>How it works ---</strong></h4>
                <ol>
                    <li>
                        <strong>Content Collection:</strong><br/>
                        <ul>
                            <li>All relevant links from the Wikibooks Java Programming site were used to develop content for the recommendations.</li>
                            <li>Source: <a href="https://en.wikibooks.org/wiki/Java_Programming" target="_blank">https://en.wikibooks.org/wiki/Java_Programming</a></li>
                        </ul>
                    </li>
                    <li>
                        <strong>Content Indexing:</strong><br/>
                        <ul>
                            <li>Content on each page on Wikibooks was split into separate payload blocks according to content type and fed to the Elastic Search Instance used.</li>
                            <li>576 Content blocks consisting of Title, URL and Data were indexed from 91 links.</li>
                            <li>Elastic Search handles stemming.</li>
                        </ul>
                    </li>
                    <li>
                        <strong>Web App:</strong><br/>
                        <ul>
                            <li>The Elastic Search Instance hosted on AWS receives all data scraped from the Wikibooks pages and creates the index.</li>
                            <li>When clicked on a post, the Text and Code part of the post are modified and keywords from these are sent to the Elastic Search Instance.</li>
                            <li>Top 10 matches from the index with the highest score are then rendered in a new tab.</li>
                        </ul>
                    </li>
                    <li>
                        <strong>Originality:</strong><br/>
                        <ul>
                            <li>The unmodified Text from the posts was sometimes too long for the engine to process. The presence of a lot of stop words in the Text was also causing the engine to return skewed results.</li>
                            <li>To address this issue, I have identified and removed stop words and other junk characters in the Text. Keywords from the Text and Code are picked up and sent to the engine to query.</li>
                            <li>This approach resulted in significantly better and more relevant recommendations.</li>
                        </ul>
                    </li>
                </ol>
            </div>

            <div>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Index</th>
                            <th>Type</th>
                            <th>Content</th>
                        </tr>
                    </thead>
                    <tbody>
                    <% posts.forEach(function(post, i) { %>
                        <tr class="clickable-row" id=<%= "p" + i %>>
                            <td>Post<%= i + 1 %></td>
                            <td><%= post["type"] %></td>
                            <td>
                                <strong>Text:<br/></strong>
                                <%= post["text"] %>
                                <br/>
                                <br/>
                                <% if (post["code"]) { %>
                                    <strong>Code:<br/></strong>
                                    <%= post["code"] %>
                                <% } %>
                            </td>
                        </tr>
                    <% }) %>
                    </tbody>
                </table>
            </div>

            <script>
                $(document).ready(function() {
                    $(".clickable-row").click(function() {
                        var postId = $(this).attr('id');
                        var http = new XMLHttpRequest();
                        var url = "/getRecs";
                        var params = JSON.stringify({postClicked: postId.substr(1)});
                        http.open("POST", url);
                        http.setRequestHeader("Content-Type", "application/json");
                        http.send(params);

                        window.open("/showRecs", "_blank");
                    });
                });
            </script>

        </div>
    </body>
</html>
